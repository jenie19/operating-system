#include <stdio.h>
#include <stdlib.h>

// Function to calculate total seek time for SCAN scheduling
int calculateTotalSeekTimeSCAN(int requests[], int n, int start, int disk_size, int direction) {
    int total_seek_time = 0;
    int current_position = start;

    // Sorting requests
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // Processing requests based on direction
    if (direction == 0) { // Left to Right
        for (int i = 0; i < n; i++) {
            total_seek_time += abs(requests[i] - current_position);
            current_position = requests[i];
        }
    } else { // Right to Left
        for (int i = n - 1; i >= 0; i--) {
            total_seek_time += abs(requests[i] - current_position);
            current_position = requests[i];
        }
    }

    return total_seek_time;
}

int main() {
    int n; // Number of disk requests
    int start; // Starting disk position
    int disk_size; // Maximum disk size
    int direction; // 0 for Left to Right, 1 for Right to Left

    // Prompt user for the number of disk requests, starting position, and disk size
    printf("Enter the number of disk requests: ");
    scanf("%d", &n);

    int requests[n]; // Array to hold disk requests

    printf("Enter the disk requests:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
    }

    printf("Enter the starting disk position: ");
    scanf("%d", &start);

    printf("Enter the disk size: ");
    scanf("%d", &disk_size);

    printf("Enter direction (0 for Left to Right, 1 for Right to Left): ");
    scanf("%d", &direction);

    int total_seek_time = calculateTotalSeekTimeSCAN(requests, n, start, disk_size, direction);

    printf("\nTotal seek time for SCAN: %d\n", total_seek_time);

    return 0;
}
